# frozen_string_literal: true

require 'prawn'
require 'gruff'
require_relative '../base.rb'

module Pdf
  module Template
    class RoutineFile < Pdf::Base
      def initialize(current_user)
        super
      end

      def write
        generate_file_name('routines')
        Prawn::Document.new(@pdf_configuration) do |pdf|
          pdf.fill_color "666666"
          pdf.text "Routines Report", :size => 32, :style => :bold, :align => :center
          pdf.move_down 80

          pdf.text "Report generated by:", :size => 14, :align => :justify, :inline_format => true, :style => :bold
          pdf.move_down 14

          pdf.text "Name: #{@current_user.name}", :size => 12, :align => :justify, :inline_format => true
          pdf.move_down 8

          pdf.text "Email: #{@current_user.email}", :size => 12, :align => :justify, :inline_format => true
          pdf.move_down 8

          pdf.move_down 20

          pdf.text "Unscheduled Routines", :size => 14, :align => :justify, :inline_format => true, :style => :bold
          pdf.move_down 14

          unscheduled_routines = Routine.based_on_company_name(@current_user.company_name, :unscheduled)

          unscheduled_routines.each do |routine|
            pdf.text "Id #{routine.id}, name - #{routine.name}, monitored event - #{routine.monitored_event}, monitoring criteria - #{routine.monitoring_criteria} , starts at #{routine.starts_at.strftime("%d/%m/%y as %H:%M")}",
            :size => 12, :align => :justify, :inline_format => true
            pdf.move_down 8
          end

          pdf.move_down 10
          pdf.text "Total - #{unscheduled_routines.count}", :size => 12, :align => :justify, :inline_format => true
          pdf.move_down 20


          pdf.text "Scheduled Routines", :size => 14, :align => :justify, :inline_format => true, :style => :bold
          pdf.move_down 14

          scheduled_routines = Routine.based_on_company_name(@current_user.company_name, :scheduled)

          scheduled_routines.each do |routine|
            pdf.text "Id #{routine.id}, name - #{routine.name}, monitored event - #{routine.monitored_event}, monitoring criteria - #{routine.monitoring_criteria} , starts at #{routine.starts_at.strftime("%d/%m/%y as %H:%M")}",
            :size => 12, :align => :justify, :inline_format => true
            pdf.move_down 8
          end

          pdf.move_down 10
          pdf.text "Total - #{scheduled_routines.count}", :size => 12, :align => :justify, :inline_format => true
          pdf.move_down 20

          pdf.text "Completed Routines", :size => 14, :align => :justify, :inline_format => true, :style => :bold
          pdf.move_down 14

          completed_routines = Routine.based_on_company_name(@current_user.company_name, :completed)

          completed_routines.each do |routine|
            pdf.text "Id #{routine.id}, name - #{routine.name}, monitored event - #{routine.monitored_event}, monitoring criteria - #{routine.monitoring_criteria} , starts at #{routine.starts_at.strftime("%d/%m/%y as %H:%M")}",
            :size => 12, :align => :justify, :inline_format => true
            pdf.move_down 8
          end

          pdf.move_down 10
          pdf.text "Total - #{completed_routines.count}", :size => 12, :align => :justify, :inline_format => true
          pdf.move_down 20

          routines = Routine.based_on_company_name(@current_user.company_name, %i[unscheduled scheduled completed])
          pdf.text "Number of registered Routines - #{routines.count}", :size => 14, :align => :justify, :inline_format => true, :style => :bold
          pdf.move_down 20

          # Creates Gruff object
          gruff = Gruff::Pie.new 900
          gruff.theme = Gruff::Themes::PASTEL

          routines_statuses = {
            unscheduled: unscheduled_routines.count,
            scheduled: scheduled_routines.count,
            completed: completed_routines.count
          }

          routines_statuses.each {|key, value| gruff.data(key, value)}

          gruff.write("tmp/#{@file_name}.jpg")

          pdf.start_new_page

          pdf.text "Routines Graphic", :size => 20, :style => :bold, :align => :center

          pdf.image "tmp/#{@file_name}.jpg", :scale => 0.50

          pdf.font "Helvetica"
          pdf.text "Automated CX #{Time.now.year}", :size => 10, :inline_format => true, :valign => :bottom, :align => :left
          pdf.number_pages "Generated at: #{(Time.now).strftime("%d/%m/%y as %H:%M")} - Page ", :start_count_at => 0, :page_filter => :all, :at => [pdf.bounds.right - 140, 7], :align => :right, :size => 8
          pdf.render_file("tmp/#{@file_name}.pdf")
        end
      end
    end
  end
end
