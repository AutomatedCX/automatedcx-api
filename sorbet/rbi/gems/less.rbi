# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/less/all/less.rbi
#
# less-2.6.0

module Less
  extend Less::Defaults
end
module Less::Defaults
  def defaults; end
  def paths; end
end
class Less::Error < StandardError
  def backtrace; end
  def cause; end
  def column; end
  def extract; end
  def filename; end
  def index; end
  def initialize(cause, value = nil); end
  def line; end
  def stack; end
  def type; end
end
class Less::ParseError < Less::Error
end
class Less::Loader
  def environment; end
  def initialize; end
  def require(module_id); end
end
class Less::Loader::Process
  def exit(*args); end
end
class Less::Loader::Console
  def log(*msgs); end
  def warn(*msgs); end
end
module Less::Loader::Path
  def self.basename(path); end
  def self.dirname(path); end
  def self.extname(path); end
  def self.join(*components); end
  def self.resolve(path); end
end
module Less::Loader::Util
  def self.error(*errors); end
  def self.puts(*args); end
end
module Less::Loader::FS
  def self.readFile(path, encoding, callback); end
  def self.readFileSync(path, encoding = nil); end
  def self.statSync(path); end
end
class Less::Loader::Buffer
  def data; end
  def data=(arg0); end
  def initialize(data, encoding = nil); end
  def length; end
  def toString(encoding = nil, begPos = nil, endPos = nil); end
end
module Less::Loader::Url
  def self.parse(url_string); end
  def self.resolve(*args); end
end
module Less::Loader::Http
  def self.get(options, callback); end
end
class Less::Loader::Http::HttpGetResult
  def err; end
  def err=(arg0); end
  def initialize(err); end
  def on(event, callback); end
end
class Less::Loader::Http::ServerResponse
  def data; end
  def data=(arg0); end
  def initialize(data, status_code); end
  def on(event, callback); end
  def statusCode; end
  def statusCode=(arg0); end
end
class Less::Parser
  def imports; end
  def initialize(options = nil); end
  def parse(less); end
end
class Less::Parser::Tree
  def initialize(tree); end
  def to_css(options = nil); end
end
module Less::JavaScript
  def self.context_wrapper; end
  def self.context_wrapper=(klass); end
  def self.default_context_wrapper; end
  def self.eval(source); end
  def self.exec(&block); end
end
module Less::Rails
end
