# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/status-page/all/status-page.rbi
#
# status-page-0.1.5

module StatusPage
  def self.check(request: nil); end
  def self.config; end
  def self.configure(&block); end
  def self.provider_result(provider, request); end
  def self.railtie_helpers_paths; end
  def self.railtie_namespace; end
  def self.railtie_routes_url_helpers(include_path_helpers = nil); end
  def self.table_name_prefix; end
  def self.use_relative_model_naming?; end
end
class StatusPage::Engine < Rails::Engine
end
module Anonymous_Module_77
end
module Anonymous_Module_78
end
class StatusPage::Configuration
  def add_custom_service(custom_service_class); end
  def add_service(provider_class); end
  def basic_auth_credentials; end
  def basic_auth_credentials=(arg0); end
  def error_callback; end
  def error_callback=(arg0); end
  def initialize; end
  def interval; end
  def interval=(arg0); end
  def providers; end
  def use(service_name, opts = nil); end
end
module StatusPage::Services
end
class StatusPage::Services::Base
  def check!; end
  def config; end
  def initialize(request: nil); end
  def request; end
  def self.config; end
  def self.config_class; end
  def self.configurable?; end
  def self.service_name; end
end
class StatusPage::Services::DatabaseException < StandardError
end
class StatusPage::Services::Database < StatusPage::Services::Base
  def check!; end
end
class StatusPage::Services::CacheException < StandardError
end
class StatusPage::Services::Cache < StatusPage::Services::Base
  def check!; end
  def key; end
end
class StatusPage::Services::RedisException < StandardError
end
class StatusPage::Services::Redis < StatusPage::Services::Base
  def check!; end
  def key; end
  def self.config_class; end
end
class StatusPage::Services::Redis::Configuration
  def initialize; end
  def url; end
  def url=(arg0); end
end
class StatusPage::Services::SidekiqException < StandardError
end
class StatusPage::Services::Sidekiq < StatusPage::Services::Base
  def check!; end
  def check_latency!; end
  def check_redis!; end
  def check_workers!; end
  def self.config_class; end
end
class StatusPage::Services::Sidekiq::Configuration
  def initialize; end
  def latency; end
  def latency=(arg0); end
end
class StatusPage::StatusController < ActionController::Base
  def _layout(lookup_context, formats); end
  def authenticate_with_basic_auth; end
  def index; end
  def self.__callbacks; end
  def self._helpers; end
  def self._routes; end
  def self._wrapper_options; end
  def self.helpers_path; end
  def self.middleware_stack; end
  def statuses; end
  include ActionDispatch::Routing::UrlFor
  include Anonymous_Module_79
end
module Anonymous_Module_79
  def _generate_paths_by_default; end
  def _routes; end
  def self._routes; end
  def self.full_url_for(options); end
  def self.optimize_routes_generation?; end
  def self.polymorphic_path(record_or_hash_or_array, options = nil); end
  def self.polymorphic_url(record_or_hash_or_array, options = nil); end
  def self.route_for(name, *args); end
  def self.url_for(options); end
  def self.url_options; end
  extend ActiveSupport::Concern
  extend Anonymous_Module_77
  extend Anonymous_Module_78
  include ActionDispatch::Routing::UrlFor
  include Anonymous_Module_77
  include Anonymous_Module_78
end
