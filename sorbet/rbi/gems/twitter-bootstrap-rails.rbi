# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/twitter-bootstrap-rails/all/twitter-bootstrap-rails.rbi
#
# twitter-bootstrap-rails-3.2.2

module Twitter
end
module Twitter::Bootstrap
end
module Twitter::Bootstrap::Breadcrumbs
  def add_bootstrap_breadcrumb(name, url = nil, options = nil); end
  def translate_breadcrumb(name, class_name); end
  extend ActiveSupport::Concern
end
module Twitter::Bootstrap::Breadcrumbs::ClassMethods
  def add_bootstrap_breadcrumb(name, url = nil, options = nil); end
end
module FlashBlockHelper
  def flash_block; end
  def flash_container(type, message); end
end
module ModalHelper
  def close_button(dismiss); end
  def modal_body(options, &block); end
  def modal_cancel_button(content, options); end
  def modal_dialog(options = nil, &block); end
  def modal_footer(options, &block); end
  def modal_header(options, &block); end
  def modal_toggle(content_or_options = nil, options, &block); end
end
module NavbarHelper
  def brand_link(name, url, no_turbolink); end
  def container_div(brand, brand_link, responsive, fluid, no_turbolink, &block); end
  def container_div_with_block(brand, brand_link, responsive, no_turbolink, &block); end
  def drop_down(name); end
  def drop_down_divider; end
  def drop_down_header(text); end
  def drop_down_link(name); end
  def drop_down_list(&block); end
  def drop_down_sublist(&block); end
  def drop_down_submenu(name, &block); end
  def drop_down_with_submenu(name, &block); end
  def is_active?(path, options = nil); end
  def menu_divider; end
  def menu_group(options = nil, &block); end
  def menu_item(name = nil, path = nil, *args, &block); end
  def menu_text(text = nil, options = nil, &block); end
  def name_and_caret(name); end
  def nav_bar(options = nil, &block); end
  def nav_bar_css_class(position, inverse = nil); end
  def nav_bar_nav(options, &block); end
  def responsive_button; end
  def responsive_div(&block); end
  def responsive_nav_header(brand, brand_link, no_turbolink); end
  def uri_state(uri, options = nil); end
end
class Hash
  def append_merge!(key, value); end
end
module BootstrapFlashHelper
  def bootstrap_flash(options = nil); end
end
module FormErrorsHelper
  def error_span(attribute, options = nil); end
  def errors_for(attribute); end
  def errors_on?(attribute); end
  extend ActionView::Helpers::SanitizeHelper::ClassMethods
  extend ActionView::Helpers::UrlHelper::ClassMethods
  include ActionView::Helpers::FormTagHelper
  include ActionView::Helpers::SanitizeHelper
  include ActionView::Helpers::TagHelper
  include ActionView::Helpers::TagHelper
  include ActionView::Helpers::TextHelper
  include ActionView::Helpers::UrlHelper
end
module Twitter::Bootstrap::Rails
end
class Twitter::Bootstrap::Rails::Engine < Rails::Engine
end
module BadgeLabelHelper
  def badge(*args); end
  def badge_label(what, value, type = nil); end
  def tag_label(*args); end
end
module GlyphHelper
  def glyph(*names); end
end
module TwitterBreadcrumbsHelper
  def render_bootstrap_breadcrumbs(divider = nil, options = nil, &block); end
  def render_breadcrumbs(divider = nil, options = nil, &block); end
end
