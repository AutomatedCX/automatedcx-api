# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/wikipedia-client/all/wikipedia-client.rbi
#
# wikipedia-client-1.10.0

module Wikipedia
  def self.Configure(&block); end
  def self.client; end
  def self.configure(&block); end
  def self.find(page, options = nil); end
  def self.find_image(title, options = nil); end
  def self.find_random(options = nil); end
end
class Wikipedia::Client
  def configuration_options; end
  def encode(val); end
  def find(title, options = nil); end
  def find_image(title, options = nil); end
  def find_random(options = nil); end
  def follow_redirects; end
  def follow_redirects=(arg0); end
  def initialize; end
  def request(options); end
  def request_image(title, options = nil); end
  def request_page(title, options = nil); end
  def request_random(options = nil); end
  def url_for(options); end
  def urlify_value(val); end
end
class Wikipedia::Configuration
  def domain(*args); end
  def path(*args); end
  def protocol(*args); end
  def self.[](directive); end
  def self.allocate; end
  def self.directives(*directives); end
  def self.instance; end
  def self.new(*arg0); end
  def user_agent(*args); end
  extend Singleton::SingletonClassMethods
  include Singleton
end
class Wikipedia::Url
  def initialize(wiki_url); end
  def title; end
end
class Wikipedia::Page
  def categories; end
  def content; end
  def coordinates; end
  def editurl; end
  def extlinks; end
  def fullurl; end
  def image_descriptionurl; end
  def image_descriptionurls; end
  def image_metadata(options = nil); end
  def image_thumburl; end
  def image_thumburls(width = nil); end
  def image_url; end
  def image_urls; end
  def images; end
  def initialize(json); end
  def json; end
  def langlinks; end
  def links; end
  def main_image_thumburl; end
  def main_image_url; end
  def page; end
  def raw_data; end
  def redirect?; end
  def redirect_title; end
  def sanitized_content; end
  def self.sanitize(s); end
  def summary; end
  def templates; end
  def text; end
  def title; end
end
